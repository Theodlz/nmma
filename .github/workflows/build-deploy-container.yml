name: CI to Docker Hub

on:
  push:
jobs:

  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        test_subset: ['linux/amd64', 'linux/arm64']

    steps:

      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'linux/amd64,linux/arm64'

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Linux amd64 image
        if: matrix.test_subset == 'linux/amd64'
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./api/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/nmma_api:latest
          platforms: linux/amd64

      - name: Build and push Linux arm64 image
        if: matrix.test_subset == 'linux/arm64'
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./api/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/nmma_api:latest
          platforms: linux/arm64

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
